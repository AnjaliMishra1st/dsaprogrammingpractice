// //  stl
 #include <iostream>
 #include <vector>

 using namespace std;
 int main(){


// //     // create vector , declare 
// //     vector<int>v;
// //     vector<int>v1(5,1);

// //     // /size & capicity

// //     cout<<"size of v:"<<v.size()<<endl;
// //     cout<<"size of v:"<<v.capacity()<<endl;
// //     v.push_back(2);
// //     v.push_back(3);
// //     v.bush_back(4);
// //     cout<<"size of v:"<<v.size()<<endl;
// //     cout<<"size of v:"<<v.capicity()<<endl;

// //     // update value
// //     v[1] = 5;
// //     cout<<"size of v:"<<v.size()<<endl;
// //     cout<<"size of v:"<<v.capicity()<<endl;

// //     //  delete value from vector
// //     vector<int>vnew;
// //     vnew.push_back(5);
// //     vnew.push_back(7);
// //     vnew.push_back(8);
// //     vnew.push_back(9);
// //     vnew.pop_back() ;
// //     cout<<"size of vnew:"<<vnew.size()<<endl;
// //     cout<<"size of vnew:"<<vnew.capicity()<<endl;
// //     vnew.erase(vnew.begin()+1);
// //     cout<<"size of vnew:"<<vnew.size()<<endl;
// //     cout<<"size of vnew:"<<vnew.capicity()<<endl;
// //     for(int i=0; i<vnew.size(); i++)
// //     cout<<vnew[i]<<" ";
// //     vnew.insert(vnew.begin()+1, 50);  // insert value
// //     cout<<endl;
// //     for(int i=0; i<vnew.size(); i++)
// //     cout<<vnew[i]<<" ";

// //     vnew[1] = 37;
// //     for(int i=0; i<vnew.size(); i++)
// //     cout<<vnew[i]<<" ";

// //     vnew.clear(); //remove all the element
// //     cout<<"size of vnew:"<<vnew.size()<<endl;
// //     cout<<"size of vnew:"<<vnew.capicity()<<endl;

// vector<int>arr;
// arr.push_back(2);
// arr.push_back(12);
// arr.push_back(21);
// arr.push_back(122);
// cout<<arr.front<<endl;
// cout<<arr[arr.size()-1]<<endl;
// cout<<arr.back()<<endl;
// vector<int>a;

// // copy value of 1 vector to another
// a=arr;
// cout<<a.size();
// a = arr;
// cout<<a.size();
// cout<<endl;
// for(auto it = arr.begin(); it!=arr.end(); it++) {
//     cout<<*it<<" ";

// }
// cout<<endl;
// for(auto i: arr)
// cout<<i<<" ";

// // sort in increasing order
// sort(ans.begin(), ans.end());
// for(int i=0; i<ans.size(); i++)
// cout<<ans[i]<<" ";
// cout<<endl;

// // sort decreasing order
// sort(ans.rbegin(),ans.end());
// for(int i=0; i<ans.size(); i++)
// cout<<ans[i]<<" ";

//  search in binary search
cout<<binary_search(ans.begin(), ans.end(),54);

cout<<find(ans.begin(),ans.end(),54)-ans.begin()<<endl;

 }

//count 
int count = count(v.begin(), v.end(), 5) ;

// max or min
int maxium = max_element(v.begin(), v.end());


Find the frequency of each element in an array and print in sorted order.

#include <bits/stdc++.h>
using namespace std;
int main() {
    vector<int> arr = {2, 3, 2, 4, 3, 3};

    map<int, int> freq; // key=element, value=count
    for (int x : arr) freq[x]++;

    for (auto p : freq)
        cout << p.first << " -> " << p.second << endl;
}
