You need to search for specific products in the list using two different search methods: linear search and binary search.
Linear Search: This method is used when the list of product IDs is unsorted. You'll traverse the entire list to find the desired product ID.
Binary Search: This method is used when the list of product IDs is sorted in ascending order. You'll repeatedly divide the list in half to locate the desired product ID.

The first line of input contains an integer n, representing the number of products in the list.
The second line contains n space-separated integers, each representing a unique product ID.
The third line contains an integer key, representing the product ID to search for in the list.

#include <iostream>
using namespace std;
int linearSearch(int arr[], int n, int key) {
    for(int i=0; i<n; i++){
        if(arr[i]==key)
        return i;
        
    }
    return -1;
    
}

int binarySearch(int arr[], int n, int key) {
    
    int start=0 , end = n-1;
    while(start<=end){
        int mid = (start + end)/2;
        if(arr[mid]==key)
        return mid;
        else if(arr[mid]<key)
        start = mid + 1;
        else
            end = mid - 1;
            
    }
    return -1;
}

bool isSorted(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        if (arr[i] > arr[i + 1]) {
            return false;
        }
    }
    return true;
}

int searchArray(int arr[], int n, int key) {
    if (isSorted(arr, n)) {
        cout << "Using Binary Search" << endl;
        return binarySearch(arr, n, key);
    } else {
        cout << "Using Linear Search" << endl;
        return linearSearch(arr, n, key);
    }
}

int main() {
    int n, key;
    cin >> n;
    
    int arr[n];
    for(int i=0; i<n; i++) {
        cin >> arr[i];
    }
    
    cin >> key;

    int result = searchArray(arr, n, key);

    if (result != -1) {
        cout << key << " found at index " << result;
    } else {
        cout << key << " not found in the list";
    }

    return 0;
}
