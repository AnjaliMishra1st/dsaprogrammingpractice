Problem Statement
In the kingdom of Techlandia, a powerful sorcerer named Zael has hidden treasures in an enchanted vault, 
and the only way to open it is by entering a secret password. However, Zael has set two conditions for the password:
Every number in the password must appear an even number of times.
At least one number must appear exactly twice.
To solve the puzzle, adventurers must verify if the password meets these conditions and also identify the most frequent element in the password. If they succeed, 
the vault will open, revealing the treasures hidden inside. The fate of Techlandiaâ€™s treasures depends on solving this magical riddle!

  #include <iostream>
#include <unordered_map>
#include <climits>
using namespace std;

int main() {
    int N;
    cin >> N;
    unordered_map<int, int> freq;

    int num;
    for (int i = 0; i < N; ++i) {
        cin >> num;
        freq[num]++;
    }

    bool allEven = true;
    bool hasExactlyTwo = false;

    int maxFreq = 0;
    int mostFrequent = INT_MAX;

    for (auto &pair : freq) {
        int val = pair.first;
        int count = pair.second;

        if (count % 2 != 0) {
            allEven = false;
        }

        if (count == 2) {
            hasExactlyTwo = true;
        }

        if (count > maxFreq || (count == maxFreq && val < mostFrequent)) {
            maxFreq = count;
            mostFrequent = val;
        }
    }

    if (allEven && hasExactlyTwo) {
        cout << "VALID" << endl;
    } else {
        cout << "INVALID" << endl;
    }

    cout << mostFrequent << endl;

    return 0;
}
