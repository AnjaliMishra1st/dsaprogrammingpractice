At a university, two student clubs, "Tech Wizards" and "Creative Minds," have decided to merge and form a new club called "Innovative Thinkers." 
The program takes two arrays, arr1, and arr2, as inputs with sorted member IDs. Each array represents the member IDs of the respective clubs. Help Alex and Sarah.
The first line of input consists of an integer n, representing the size of the first array (Tech Wizards).
The second line of input consists of n space-separated integers, representing the member IDs of the first array.
The third line of input consists of an integer m, representing the size of the second array (Creative Minds).
The fourth line of input consists of m space-separated integers, representing the member IDs of the second array.


// You are using GCC
#include <bits/stdc++.h>
using namespace std;

int main(){
    int n;
    cin >> n;
    
    int arr1[10];
    for(int i=0; i<n; i++){
        cin >> arr1[i];
        }
    int m; 
    cin >> m;
    int arr2[10];
    for(int i=0; i<m; i++){
      cin >> arr2[i];
    }
    vector<int> merged;
    
    for(int i=0; i<n; i++){
        merged.push_back(arr1[i]);
        
        }
    for(int i=0; i<m; i++){
        merged.push_back(arr2[i]);
        
        }
    sort(merged.begin(), merged.end());
    for(int i=0; i<merged.size(); i++) {
        if(i==0 || merged[i] != merged[i-1])
        cout<<merged[i] << " ";
    }
     return 0;
    }


#In a library, there are two arrays representing different sections of books: one for fiction books and another for non-fiction books. 
Combine these two arrays to create a unified catalog that lists all the books available in the library, regardless of genre.

The first line of input contains an integer n, which represents the number of fiction books.
The next n lines contain the titles of the fiction books.
The next line contains an integer m, which represents the number of non-fiction books.
The next m lines contain the titles of the non-fiction books.

// You are using GCC
#include <bits/stdc++.h>
using namespace std;

int main(){
    int n, m;
    cin>>n;
    cin.ignore();
    
    string book;
    
    for(int i=0; i<n; i++){
        getline(cin , book);
        cout<<book<<endl;
        
    }
    
    cin >> m;
    cin.ignore();
    for(int i=0; i<m; i++){
        getline(cin, book);
        cout<<book<<endl;
        
    }
    return 0;
}
    
    
    
