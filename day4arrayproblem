# Check if Array is Sorted
// Return True if the array is sorted in ascending order.
def is_sorted(arr):
    for i in range(len(arr) - 1):
        if arr[i] > arr[i + 1]:
            return False
    return True

print(is_sorted([1, 2, 3, 4, 5]))

#Binary Search in a Sorted Array
//Search for a target value using binary search.

def binary_search(arr, target):
    low, high = 0, len(arr) - 1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return -1

print(binary_search([1, 3, 5, 7, 9], 7))

# Remove Duplicates from a Sorted Array
// Remove duplicates and return the new length and array.

def remove_duplicates(arr):
    result = []
    for num in arr:
        if not result or result[-1] != num:
            result.append(num)
    return result

print(remove_duplicates([1, 1, 2, 2, 3]))

#Sort an Array Using Bubble Sort

def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n - 1 - i):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

print(bubble_sort([5, 3, 8, 4, 2]))

# Sum of All Elements in a 2D Matrix

def sum_2d_matrix(matrix):
    total = 0
    for row in matrix:
        total += sum(row)
    return total

print(sum_2d_matrix([[1, 2], [3, 4]]))

#Transpose of a 2D Matrix
//Convert rows to columns and vice versa

def transpose(matrix):
    return [list(row) for row in zip(*matrix)]

print(transpose([[1, 2], [3, 4]]))

